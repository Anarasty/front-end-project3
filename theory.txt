JAVASCRIPT DISPLAY
innerHTML - writing into an HTML element
document.write() - writing into the HTML output (DON'T USE THIS!!!)
window.alert() - writing into an alert box
console.log() - writing into the browser console

JAVASCRIPT KEYWORDS
var - declares a variable           ---\
let	- declares a block variable     ---| -- USED TO DECLARE VARIABLES
const - declares a block constant   ---/
if - marks a block of statements to be executed on a condition
switch - marks a block of statements to be executed in different cases
for - marks a block of statements to be executed in a loop
function - declares a function
return - exits a function
try - implements error handling to a block of statements


SYNTAX
Strings: "John Doe" 'John Doe'
Numbers: 10.50 1001

When to use JavaScript const?
As a general rule, always declare a variable with const 
unless you know that the value will change.
Use const when you declare:
- A new Array
- A new Object
- A new Function
- A new RegExp
The keyword const is a little misleading.
It does not define a constant value. It defines a constant reference to a value.
Because of this you can NOT:
- Reassign a constant value
- Reassign a constant array
- Reassign a constant object
But you CAN:
- Change the elements of constant array
- Change the properties of constant object

JAVASCRIPT ARITHMETIC OPERATORS
+ Addition
- Subtraction
* Multiplication
** Exponentiation
/ Division
% Modulus
++ Increment
-- Decrement

JAVASCRIPT ASSIGNMENT OPERATORS
=       x = y	    x = y
+=	    x += y	    x = x + y
-=	    x -= y	    x = x - y
*=	    x *= y	    x = x * y
/=	    x /= y	    x = x / y
%=	    x %= y	    x = x % y
**=	    x **= y	    x = x ** y

JAVASCRIPT COMPARISON OPERATORS
==	    equal to
===	    equal value and equal type
!=	    not equal
!==	    not equal value or not equal type
>	    greater than
<	    less than
>=	    greater than or equal to
<=	    less than or equal to
?       ternary operator

JAVASCRIPT LOGIC OPERATORS
&&	    logical and
||	    logical or
!       logical not

JAVASCRIPT TYPE OPERATORS
typeof	    Returns the type of a variable
instanceof	Returns true if an object is an instance of an object type

JAVASCRIPT BITWISE OPERATORS
&	    AND	
|	    OR
~       NOT	
^	    XOR	
<<	    left shift	
>>	    right shift	
>>>	    unsigned right shift	

THIS IN JAVASCRIPT
In JavaScript, the this keyword refers to an object.
Which object depends on how this is being invoked (used or called).
The this keyword refers to different objects depending on how it is used:
- In an object method, this refers to the object.
- Alone, this refers to the global object.
- In a function, this refers to the global object.
- In a function, in strict mode, this is undefined.
- In an event, this refers to the element that received the event.
- Methods like call(), apply(), and bind() can refer this to any object.

JAVASCRIPT EVENTS
Event           Description
onchange        An HTML element has been changed
onclick	        The user clicks an HTML element
onmouseover     The user moves the mouse over an HTML element
onmouseout	    The user moves the mouse away from an HTML element
onkeydown       The user pushes a keyboard key
onload	        The browser has finished loading the page

JAVASCRIPT STRINGS
\b      Backspace
\f      Form Feed
\n	    New Line
\r	    Carriage Return
\t	    Horizontal Tabulator
\v	    Vertical Tabulator

JAVASCRIPT STRING METHODS
- slice(start, end) - extracts a part of a string and returns the extracted part in a new string.
- substring(start, end) - same as slice but without negative indexes
- substr(start, end) - is similar to slice(). The difference is that the second parameter specifies the length of the extracted part
- replace('word1', 'word2') - replaces a specified value with another value in a string
- toUpperCase() - string is converted to upper case
- toLowerCase() - string is converted to lower case with
- concat() - joins two or more strings
- trim() - removes whitespace from both sides of a string
- padStart and padEnd - support padding at the beginning and at the end of a string
- split() - string can be converted to an array

There are 3 methods for extracting string characters:
- charAt(position) - returns the character at a specified index (position) in a string
- charCodeAt(position) - returns the unicode of the character at a specified index in a string
- Property access [ ]'

JAVASCRIPT STRING SEARCH METHODS
indexOf() - returns the index of (the position of) the first occurrence of a specified text in a string
lastIndexOf() - returns the index of the last occurrence of a specified text in a string
search() - searches a string for a specified value and returns the position of the match
match() - searches a string for a match against a regular expression, and returns the matches, as an Array object
includes() - returns true if a string contains a specified value
startsWith() - returns true if a string begins with a specified value, otherwise false
endsWith() - returns true if a string ends with a specified value, otherwise false

JAVASCRIPT NUMBER METHODS
toString() - method returns a number as a string
toExponential() - returns a string, with a number rounded and written using exponential notation
toFixed() - returns a string, with the number written with a specified number of decimals
toPrecision() - returns a string, with a number written with a specified length
valueOf() - returns a number as a number

Number() - Returns a number, converted from its argument
parseFloat() - Parses its argument and returns a floating point number
parseInt() - Parses its argument and returns an integer

JAVASCRIPT NUMBER PROPERTIES
MAX_VALUE	        Returns the largest number possible in JavaScript
MIN_VALUE	        Returns the smallest number possible in JavaScript
POSITIVE_INFINITY	Represents infinity (returned on overflow)
NEGATIVE_INFINITY	Represents negative infinity (returned on overflow)
NaN	                Represents a "Not-a-Number" value

JAVASCRIPT ARRAY METHODS
toString() - converts an array to a string of (comma separated) array values
join() - joins all array elements into a string, but in addition you can specify the separator
pop() - removes the last element from an array
push() - adds a new element to an array (at the end)
shift() - removes the first array element and "shifts" all other elements to a lower index
unshift() - adds a new element to an array (at the beginning), and "unshifts" older elements
concat() - creates a new array by merging (concatenating) existing arrays
splice() - can be used to add and delete new items to an array
slice() - slices out a piece of an array into a new array but not delete the items

JAVASCRIPT DATE GET METHODS
getTime() - returns the number of milliseconds since January 1, 1970
getFullYear() - returns the year of a date as a four digit number
getMonth() - returns the month of a date as a number (0-11)
getDate() - returns the day of a date as a number (1-31)
getHours() - returns the hours of a date as a number (0-23)
getMinutes() - returns the minutes of a date as a number (0-59)
getSeconds() - returns the seconds of a date as a number (0-59)
getMilliseconds() - returns the milliseconds of a date as a number (0-999)
getDay() - returns the weekday of a date as a number (0-6)